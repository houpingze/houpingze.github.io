<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://houpingze.github.io</id>
    <title>houpingzeAKIOI</title>
    <updated>2020-09-28T13:25:40.246Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://houpingze.github.io"/>
    <link rel="self" href="https://houpingze.github.io/atom.xml"/>
    <subtitle>温故而知新，可以AKIOI
houpingze 的小站</subtitle>
    <logo>https://houpingze.github.io/images/avatar.png</logo>
    <icon>https://houpingze.github.io/favicon.ico</icon>
    <rights>All rights reserved 2020, houpingzeAKIOI</rights>
    <entry>
        <title type="html"><![CDATA[你古 P1104 代码]]></title>
        <id>https://houpingze.github.io/post/tFOL2_rVM/</id>
        <link href="https://houpingze.github.io/post/tFOL2_rVM/">
        </link>
        <updated>2020-09-28T13:22:29.000Z</updated>
        <content type="html"><![CDATA[<pre><code class="language-cpp">#include&lt;iostream&gt;
#include&lt;bits/stdc++.h&gt;
typedef unsigned long long ull;
using namespace std;
int n,cnt,m;
struct s{
	int y,m,d;
	int sj,id;
	string n;
}a[101010];
bool cmp(s a,s b){
	if(a.y!=b.y) return a.y&lt;b.y;
	if(a.m!=b.m) return a.m&lt;b.m;
	if(a.d!=b.d) return a.d&lt;b.d;
	return a.id&gt;b.id;
}
int main(){
	cin&gt;&gt;n;
	for(int i=1;i&lt;=n;i++){
		cin&gt;&gt;a[i].n&gt;&gt;a[i].y&gt;&gt;a[i].m&gt;&gt;a[i].d; 
		a[i].id=i;
	}
	sort(a+1,a+n+1,cmp);
	for(int i=1;i&lt;=n;i++) cout&lt;&lt;a[i].n&lt;&lt;endl;
}
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[你谷 P1996 题解]]></title>
        <id>https://houpingze.github.io/post/ry6gl4U1C/</id>
        <link href="https://houpingze.github.io/post/ry6gl4U1C/">
        </link>
        <updated>2020-09-28T12:51:02.000Z</updated>
        <content type="html"><![CDATA[<pre><code class="language-cpp">#include&lt;iostream&gt;
typedef unsigned long long ull;
using namespace std;
int n,m,num;
bool b[10000];
int a[100000],c[1000000];
void s(){
    int r=n,i=1,cnt=0;
    while(r&gt;0){
        if(b[i]==0){
            num++;
            if(num==m) cnt++,cout&lt;&lt;i&lt;&lt;' ',b[i]=1,r--,num=0;
        }
        i++;
        if(i&gt;n) i=1;
    }
}
int main(){
    cin&gt;&gt;n&gt;&gt;m;
    s(); 
}
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[日记0003]]></title>
        <id>https://houpingze.github.io/post/pUvUJIijg/</id>
        <link href="https://houpingze.github.io/post/pUvUJIijg/">
        </link>
        <updated>2020-09-28T09:49:42.000Z</updated>
        <content type="html"><![CDATA[<p>今天发生了许多事情。</p>
<ol>
<li>体育课的事情<br>
一个<code>**</code>的体育老师叫我们罚跑13圈，关键是只叫女生跑9圈，md，之前老师还说什么“全班是一个集体，要跑一起跑”xswl<br>
这种**的老师，也没必要表现出好学生的表现，虽然我是班长。<br>
于是，凭我的精（zhi）密（zhang）的分析，我发现，老师的视觉盲区就在操场中间，于是……</li>
</ol>
<h2 id="抄近道">抄近道！</h2>
<p>然后以100km/s的速度超了近道，并且……</p>
<h2 id="老师没发现">老师没发现！</h2>
<p>（（（（（（（（（（（（（（（（（（（（（（（（<br>
<s>快mod我</s><br>
2. 下午<br>
有一个xxs的女生，本来老师就不给骑自行车上下学，结果<strong>它</strong>还偏要骑，而且，还故意用自行车来撞男生一个学霸，我们还手，它还说什么“我明天报复你们”，xxs，xswl<br>
<img src="https://gitee.com/houpingze/ak-ioi/raw/master/20200927215021.png" alt="" loading="lazy"><img src="https://gitee.com/houpingze/ak-ioi/raw/master/20200927215004.png" alt="" loading="lazy"><br>
3. 作业好多（bushi<br>
4. 今天上课时<br>
有一个xxs的数学老师，我坐在窗户边，可是很热，因为有窗帘挡着，而且拉不了/kk，所以我就用手拉着窗帘</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[日记0002]]></title>
        <id>https://houpingze.github.io/post/日记0002/</id>
        <link href="https://houpingze.github.io/post/日记0002/">
        </link>
        <updated>2020-09-27T10:18:52.000Z</updated>
        <content type="html"><![CDATA[<p>昨天作业写到9：00左右祭（bushi<br>
作业是真的多/kel<img src="https://gitee.com/houpingze/ak-ioi/raw/master/20200926100211.png" alt="" loading="lazy"></p>
<p>上午没什么好说的，就是下午，老师上完课还要再上，再上，再上<br>
具体就是下课了，老师上了<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>10</mn><mi>min</mi><mo>⁡</mo></mrow><annotation encoding="application/x-tex">10\min</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66786em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">0</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">min</span></span></span></span>，结果就要下去排练什么东西<s>反正我没听进去</s>（bushi<br>
然后回来老师要我们把语文书打开，我们一阵“哎”<br>
结果老师说：“你们看别的班也都在上课，又不是我一个人拖堂”<br>
……………………………………………………………………<br>
balabala讲了一大堆，接着上课<br>
结果讲完了第八课，又开始讲练习册<br>
这时，其他班已经放学了………………<img src="https://gitee.com/houpingze/ak-ioi/raw/master/20200921220631.png" alt="" loading="lazy"><img src="https://gitee.com/houpingze/ak-ioi/raw/master/20200921220631.png" alt="" loading="lazy"><br>
我的状况：认真听讲——》不耐烦——》听不下去，开始写初赛的题目——》写作业——》崩溃<br>
<img src="https://gitee.com/houpingze/ak-ioi/raw/master/20200921220611.png" alt="" loading="lazy"><img src="https://gitee.com/houpingze/ak-ioi/raw/master/20200921220611.png" alt="" loading="lazy"><img src="https://gitee.com/houpingze/ak-ioi/raw/master/20200921220611.png" alt="" loading="lazy"><br>
由于学校要举行打字比赛  <s>（突然感觉作为一个信竞生好幸福）</s>，所以开始练习打字QWQ<br>
拼音：<br>
<img src="https://gitee.com/houpingze/ak-ioi/raw/master/20200927191159.png" alt="" loading="lazy"></p>
<p>英语：<br>
<img src="https://gitee.com/houpingze/ak-ioi/raw/master/20200927191712.png" alt="" loading="lazy"><br>
<img src="https://gitee.com/houpingze/ak-ioi/raw/master/20200927192821.png" alt="" loading="lazy"></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[日记0001]]></title>
        <id>https://houpingze.github.io/post/ri-ji-0001/</id>
        <link href="https://houpingze.github.io/post/ri-ji-0001/">
        </link>
        <updated>2020-09-26T11:54:41.000Z</updated>
        <content type="html"><![CDATA[<p>几个老师把一天假期的作业当成两天假期布置了（</p>
<p>上午：上了c++的汉诺塔问题，难得要死😱😱😱😢，具体的笔记请见w我的上一篇文章</p>
<p>课后测被题目坑到了，结果……90，wtcl<img src="https://gitee.com/houpingze/ak-ioi/raw/master/20200921220616.png" alt="" loading="lazy"><img src="https://gitee.com/houpingze/ak-ioi/raw/master/20200921220616.png" alt="" loading="lazy"><img src="https://gitee.com/houpingze/ak-ioi/raw/master/20200921220616.png" alt="" loading="lazy"><img src="https://gitee.com/houpingze/ak-ioi/raw/master/20200921220616.png" alt="" loading="lazy"></p>
<p>然后回家睡觉，起来干掉了作文<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∗</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">*1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">∗</span><span class="mord">1</span></span></span></span> 口算<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∗</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">*1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">∗</span><span class="mord">1</span></span></span></span> 53*<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>inf</mi><mo>⁡</mo></mrow><annotation encoding="application/x-tex">\inf</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mop">in<span style="margin-right:0.07778em;">f</span></span></span></span></span></p>
<p>由于学校要举行打字比赛，关键是还是名校45中和我们垃圾南小比，所以要格外认真的备战，就打字了30<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>min</mi><mo>⁡</mo></mrow><annotation encoding="application/x-tex">\min</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66786em;vertical-align:0em;"></span><span class="mop">min</span></span></span></span>，争取吊打45，给南小争光吧 <s>（我在想什么</s></p>
<p>写这篇日记的时候<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>d</mi><mi>e</mi><mi>l</mi><mi>e</mi><mi>t</mi><mi>e</mi></mrow><annotation encoding="application/x-tex">delete</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">d</span><span class="mord mathdefault">e</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">e</span><span class="mord mathdefault">t</span><span class="mord mathdefault">e</span></span></span></span>键坏掉了，<s>什么垃圾30RMB键盘</s></p>
<p>晚上还恰了火锅，辣辣辣！(</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[汉诺塔]]></title>
        <id>https://houpingze.github.io/post/han-nuo-ta/</id>
        <link href="https://houpingze.github.io/post/han-nuo-ta/">
        </link>
        <updated>2020-09-26T03:27:10.000Z</updated>
        <content type="html"><![CDATA[<p>这道题需要经过中间柱，所以可以把操作分为两类：</p>
<ol>
<li>移到中间柱子上</li>
<li>从中间柱移除</li>
</ol>
<p>根据汉诺塔的思路，我们可以把汉诺n个盘子分为这样几步:</p>
<ol>
<li>汉诺前<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">n-1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>个盘子从起始柱子到中间柱子上</li>
<li>汉诺前<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">n-1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>个盘子从中间柱子移出到起始柱子上</li>
<li>移动第<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">n</span></span></span></span>个柱子从起始柱子到中间柱（1步）</li>
<li>汉诺前<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">n-1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>个盘子从终点柱子到中间柱子上</li>
<li>汉诺前<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">n-1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>个盘子从中间柱子移出到终点柱子上</li>
<li>移动第<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">n</span></span></span></span>个柱子从中间柱移除到终点柱子（1步）</li>
<li>汉诺第<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">n-1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>个柱子从起始柱子到终点柱（递归）<br>
由于从中间到两边是移动是对称的，所以花的步数是相同的。</li>
</ol>
<p>令<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>h</mi><mi>a</mi><mi>n</mi><mi>o</mi><mi>i</mi><mn>2</mn><mi>s</mi><mi>i</mi><mi>d</mi><mi>e</mi><mo>(</mo><mi>n</mi><mo>)</mo></mrow><annotation encoding="application/x-tex">hanoi2side(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">h</span><span class="mord mathdefault">a</span><span class="mord mathdefault">n</span><span class="mord mathdefault">o</span><span class="mord mathdefault">i</span><span class="mord">2</span><span class="mord mathdefault">s</span><span class="mord mathdefault">i</span><span class="mord mathdefault">d</span><span class="mord mathdefault">e</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span></span></span></span>表示汉诺<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">n</span></span></span></span>个盘子从中间柱到两边柱子最少花费的步数。</p>
<p>令<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>h</mi><mi>a</mi><mi>n</mi><mi>o</mi><mi>i</mi><mn>2</mn><mi>m</mi><mi>i</mi><mi>d</mi><mo>(</mo><mi>n</mi><mo>)</mo></mrow><annotation encoding="application/x-tex">hanoi2mid(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">h</span><span class="mord mathdefault">a</span><span class="mord mathdefault">n</span><span class="mord mathdefault">o</span><span class="mord mathdefault">i</span><span class="mord">2</span><span class="mord mathdefault">m</span><span class="mord mathdefault">i</span><span class="mord mathdefault">d</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span></span></span></span>表示汉诺<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">n</span></span></span></span>个盘子从两边柱子到中间柱最少花费的步数。</p>
<p>所以按照刚才的过程，汉诺<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">n</span></span></span></span>个盘子所需的步骤<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>h</mi><mi>a</mi><mi>n</mi><mi>o</mi><mi>i</mi><mo>(</mo><mi>n</mi><mo>)</mo></mrow><annotation encoding="application/x-tex">hanoi(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">h</span><span class="mord mathdefault">a</span><span class="mord mathdefault">n</span><span class="mord mathdefault">o</span><span class="mord mathdefault">i</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span></span></span></span>为</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>h</mi><mi>a</mi><mi>n</mi><mi>o</mi><mi>i</mi><mi>i</mi><mn>2</mn><mi>m</mi><mi>i</mi><mi>d</mi><mo>(</mo><mi>n</mi><mo>−</mo><mn>1</mn><mo>)</mo><mo>+</mo><mi>h</mi><mi>a</mi><mi>n</mi><mi>o</mi><mi>i</mi><mi>i</mi><mn>2</mn><mi>s</mi><mi>i</mi><mi>d</mi><mi>e</mi><mo>(</mo><mi>n</mi><mo>−</mo><mn>1</mn><mo>)</mo><mo>+</mo><mn>1</mn><mo>+</mo><mi>h</mi><mi>a</mi><mi>n</mi><mi>o</mi><mi>i</mi><mn>2</mn><mi>m</mi><mi>i</mi><mi>d</mi><mo>(</mo><mi>n</mi><mo>−</mo><mn>1</mn><mo>)</mo><mo>+</mo><mi>h</mi><mi>a</mi><mi>n</mi><mi>o</mi><mi>i</mi><mi>i</mi><mn>2</mn><mi>s</mi><mi>i</mi><mi>d</mi><mi>e</mi><mo>(</mo><mi>n</mi><mo>−</mo><mn>1</mn><mo>)</mo><mo>+</mo><mi>h</mi><mi>a</mi><mi>n</mi><mi>o</mi><mi>i</mi><mo>(</mo><mi>n</mi><mo>−</mo><mn>1</mn><mo>)</mo></mrow><annotation encoding="application/x-tex">hanoii2mid(n-1)+hanoii2side(n-1)+1+hanoi2mid(n-1)+hanoii2side(n-1)+hanoi(n-1)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">h</span><span class="mord mathdefault">a</span><span class="mord mathdefault">n</span><span class="mord mathdefault">o</span><span class="mord mathdefault">i</span><span class="mord mathdefault">i</span><span class="mord">2</span><span class="mord mathdefault">m</span><span class="mord mathdefault">i</span><span class="mord mathdefault">d</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">h</span><span class="mord mathdefault">a</span><span class="mord mathdefault">n</span><span class="mord mathdefault">o</span><span class="mord mathdefault">i</span><span class="mord mathdefault">i</span><span class="mord">2</span><span class="mord mathdefault">s</span><span class="mord mathdefault">i</span><span class="mord mathdefault">d</span><span class="mord mathdefault">e</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">h</span><span class="mord mathdefault">a</span><span class="mord mathdefault">n</span><span class="mord mathdefault">o</span><span class="mord mathdefault">i</span><span class="mord">2</span><span class="mord mathdefault">m</span><span class="mord mathdefault">i</span><span class="mord mathdefault">d</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">h</span><span class="mord mathdefault">a</span><span class="mord mathdefault">n</span><span class="mord mathdefault">o</span><span class="mord mathdefault">i</span><span class="mord mathdefault">i</span><span class="mord">2</span><span class="mord mathdefault">s</span><span class="mord mathdefault">i</span><span class="mord mathdefault">d</span><span class="mord mathdefault">e</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">h</span><span class="mord mathdefault">a</span><span class="mord mathdefault">n</span><span class="mord mathdefault">o</span><span class="mord mathdefault">i</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span></span></p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>=</mo><mn>2</mn><mo>∗</mo><mo>(</mo><mi>h</mi><mi>a</mi><mi>n</mi><mi>o</mi><mi>i</mi><mn>2</mn><mi>m</mi><mi>i</mi><mi>d</mi><mo>(</mo><mi>n</mi><mo>−</mo><mn>1</mn><mo>)</mo><mo>+</mo><mi>h</mi><mi>a</mi><mi>n</mi><mi>o</mi><mi>i</mi><mi>i</mi><mn>2</mn><mi>s</mi><mi>i</mi><mi>d</mi><mi>e</mi><mo>(</mo><mi>n</mi><mo>−</mo><mn>1</mn><mo>)</mo><mo>+</mo><mn>1</mn><mo>)</mo><mo>+</mo><mi>h</mi><mi>a</mi><mi>n</mi><mi>o</mi><mi>i</mi><mo>(</mo><mi>n</mi><mo>−</mo><mn>1</mn><mo>)</mo></mrow><annotation encoding="application/x-tex">=2*(hanoi2mid(n-1)+hanoii2side(n-1)+1)+hanoi(n-1)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">h</span><span class="mord mathdefault">a</span><span class="mord mathdefault">n</span><span class="mord mathdefault">o</span><span class="mord mathdefault">i</span><span class="mord">2</span><span class="mord mathdefault">m</span><span class="mord mathdefault">i</span><span class="mord mathdefault">d</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">h</span><span class="mord mathdefault">a</span><span class="mord mathdefault">n</span><span class="mord mathdefault">o</span><span class="mord mathdefault">i</span><span class="mord mathdefault">i</span><span class="mord">2</span><span class="mord mathdefault">s</span><span class="mord mathdefault">i</span><span class="mord mathdefault">d</span><span class="mord mathdefault">e</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">h</span><span class="mord mathdefault">a</span><span class="mord mathdefault">n</span><span class="mord mathdefault">o</span><span class="mord mathdefault">i</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span></span></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[搬迁]]></title>
        <id>https://houpingze.github.io/post/ban-qian/</id>
        <link href="https://houpingze.github.io/post/ban-qian/">
        </link>
        <updated>2020-09-26T01:43:41.000Z</updated>
        <content type="html"><![CDATA[<p>houpingze.cf</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[递归基本思想]]></title>
        <id>https://houpingze.github.io/post/ak-ctsc-1/</id>
        <link href="https://houpingze.github.io/post/ak-ctsc-1/">
        </link>
        <updated>2020-09-05T02:15:54.000Z</updated>
        <summary type="html"><![CDATA[<figure data-type="image" tabindex="1"><img src="https://houpingze.github.io/post-images/1599272172797.png" alt="" loading="lazy"></figure>
<h2 id="递归的两大要素">递归的两大要素：</h2>
<h3 id="递推关系">递推关系：</h3>
<p>根据某种方法，对问题进行拆分【递】</p>
<h3 id="终止条件">终止条件：</h3>
<p>到达某种条件，问题可以直接求解，此时到达递归的边界，然后依次组合出原来的大问题的解。【归】</p>
<h2 id="代码讲解">代码讲解：</h2>
<p>2404：</p>
<pre><code class="language-cpp">#include&lt;iostream&gt;
using namespace std;
int f(int n){
    if(n==1) return 1;
    return f(n-1)+n;
}
int main(){
    int n;
    cin &gt;&gt; n;
    cout&lt;&lt;f(n);
}
 
</code></pre>
<p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>f</mi><mo>(</mo><mi>n</mi><mo>)</mo></mrow><annotation encoding="application/x-tex">f(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span></span></span></span>表示前n个数的和<br>
递推关系：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>f</mi><mo>(</mo><mi>n</mi><mo>)</mo><mo>=</mo><mi>f</mi><mo>(</mo><mi>n</mi><mo>−</mo><mn>1</mn><mo>)</mo><mo>+</mo><mi>n</mi></mrow><annotation encoding="application/x-tex">f(n)=f(n-1)+n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">n</span></span></span></span><br>
边界:<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>f</mi><mo>(</mo><mn>1</mn><mo>)</mo><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">f(1)=1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span></p>
<p>2462:</p>
<pre><code class="language-cpp">#include&lt;iostream&gt;
typedef unsigned long long ull;
using namespace std;
int n,cnt,m,a[100000];
int f(int n){
	if(n==1) return a[1];
	return max(f(n-1),a[n]);
}
int main(){
	cin&gt;&gt;n;
	for(int i=1;i&lt;=n;i++) cin&gt;&gt;a[i];
	cout&lt;&lt;f(n);
}

</code></pre>
<p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>f</mi><mo>(</mo><mi>n</mi><mo>)</mo></mrow><annotation encoding="application/x-tex">f(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span></span></span></span>表示前n个数的最大值<br>
递推：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>f</mi><mo>(</mo><mi>n</mi><mo>)</mo><mo>=</mo><mi>max</mi><mo>⁡</mo><mo>(</mo><mi>f</mi><mo>(</mo><mi>n</mi><mo>−</mo><mn>1</mn><mo>)</mo><mo separator="true">,</mo><mi>a</mi><mo>[</mo><mi>n</mi><mo>]</mo><mo>)</mo></mrow><annotation encoding="application/x-tex">f(n)=\max(f(n-1),a[n])</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop">max</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">a</span><span class="mopen">[</span><span class="mord mathdefault">n</span><span class="mclose">]</span><span class="mclose">)</span></span></span></span><br>
边界：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>f</mi><mo>(</mo><mn>1</mn><mo>)</mo><mo>=</mo><mi>a</mi><mo>[</mo><mn>1</mn><mo>]</mo></mrow><annotation encoding="application/x-tex">f(1)=a[1]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">a</span><span class="mopen">[</span><span class="mord">1</span><span class="mclose">]</span></span></span></span></p>
<h2 id="斐波那契数列">斐波那契数列：</h2>
<p>普通算法：</p>
<pre><code>int f(int n){
  if(n==1||n==2) return 1;
  return f(n-1)+f(n-2)
}
</code></pre>
]]></summary>
        <content type="html"><![CDATA[<figure data-type="image" tabindex="1"><img src="https://houpingze.github.io/post-images/1599272172797.png" alt="" loading="lazy"></figure>
<h2 id="递归的两大要素">递归的两大要素：</h2>
<h3 id="递推关系">递推关系：</h3>
<p>根据某种方法，对问题进行拆分【递】</p>
<h3 id="终止条件">终止条件：</h3>
<p>到达某种条件，问题可以直接求解，此时到达递归的边界，然后依次组合出原来的大问题的解。【归】</p>
<h2 id="代码讲解">代码讲解：</h2>
<p>2404：</p>
<pre><code class="language-cpp">#include&lt;iostream&gt;
using namespace std;
int f(int n){
    if(n==1) return 1;
    return f(n-1)+n;
}
int main(){
    int n;
    cin &gt;&gt; n;
    cout&lt;&lt;f(n);
}
 
</code></pre>
<p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>f</mi><mo>(</mo><mi>n</mi><mo>)</mo></mrow><annotation encoding="application/x-tex">f(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span></span></span></span>表示前n个数的和<br>
递推关系：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>f</mi><mo>(</mo><mi>n</mi><mo>)</mo><mo>=</mo><mi>f</mi><mo>(</mo><mi>n</mi><mo>−</mo><mn>1</mn><mo>)</mo><mo>+</mo><mi>n</mi></mrow><annotation encoding="application/x-tex">f(n)=f(n-1)+n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">n</span></span></span></span><br>
边界:<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>f</mi><mo>(</mo><mn>1</mn><mo>)</mo><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">f(1)=1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span></p>
<p>2462:</p>
<pre><code class="language-cpp">#include&lt;iostream&gt;
typedef unsigned long long ull;
using namespace std;
int n,cnt,m,a[100000];
int f(int n){
	if(n==1) return a[1];
	return max(f(n-1),a[n]);
}
int main(){
	cin&gt;&gt;n;
	for(int i=1;i&lt;=n;i++) cin&gt;&gt;a[i];
	cout&lt;&lt;f(n);
}

</code></pre>
<p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>f</mi><mo>(</mo><mi>n</mi><mo>)</mo></mrow><annotation encoding="application/x-tex">f(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span></span></span></span>表示前n个数的最大值<br>
递推：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>f</mi><mo>(</mo><mi>n</mi><mo>)</mo><mo>=</mo><mi>max</mi><mo>⁡</mo><mo>(</mo><mi>f</mi><mo>(</mo><mi>n</mi><mo>−</mo><mn>1</mn><mo>)</mo><mo separator="true">,</mo><mi>a</mi><mo>[</mo><mi>n</mi><mo>]</mo><mo>)</mo></mrow><annotation encoding="application/x-tex">f(n)=\max(f(n-1),a[n])</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop">max</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">a</span><span class="mopen">[</span><span class="mord mathdefault">n</span><span class="mclose">]</span><span class="mclose">)</span></span></span></span><br>
边界：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>f</mi><mo>(</mo><mn>1</mn><mo>)</mo><mo>=</mo><mi>a</mi><mo>[</mo><mn>1</mn><mo>]</mo></mrow><annotation encoding="application/x-tex">f(1)=a[1]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">a</span><span class="mopen">[</span><span class="mord">1</span><span class="mclose">]</span></span></span></span></p>
<h2 id="斐波那契数列">斐波那契数列：</h2>
<p>普通算法：</p>
<pre><code>int f(int n){
  if(n==1||n==2) return 1;
  return f(n-1)+f(n-2)
}
</code></pre>
<!-- more -->
<p>时间复杂度<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi><mo>(</mo><msup><mn>2</mn><mi>n</mi></msup><mo>)</mo></mrow><annotation encoding="application/x-tex">O(2^n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></p>
<p>but,why???<br>
because :</p>
<h2 id=""><img src="https://cdn.jsdelivr.net/gh/houpingze/tc@latest/data/20200905112551.png" alt="" loading="lazy"></h2>
<h2 id="递归过程中有大量的重复计算例如上图fn-2被算了很多次">递归过程中有大量的重复计算，例如上图f(n-2)被算了很多次。</h2>
<hr>
<p>我们可以通过记忆化来避免重复计算，即定义一个数组存。<br>
记忆化：</p>
<pre><code>int f(int n){
  if(j[n]!=0) return j[n];
  if(n==1||n==2) return 1;
  j[n]=f(n-1)+f(n-2);
  return f(n-1)+f(n-2)
}
</code></pre>
<p>2458:<br>
题目：<br>
<img src="https://cdn.jsdelivr.net/gh/houpingze/tc@latest/data/20200905114616.png" alt="" loading="lazy"></p>
<p><code>f(n)</code>表示数字 n 各个位数上的和</p>
<p>递推： <code>f(n)=f(n/10)+n%10</code></p>
<p>边界：</p>
<p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi><mo>&gt;</mo><mn>10</mn></mrow><annotation encoding="application/x-tex">n&gt;10</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">0</span></span></span></span>时 <code>return n;</code></p>
<p>代码：</p>
<pre><code class="language-cpp">#include&lt;iostream&gt;
typedef unsigned long long ull;
using namespace std;
int n,cnt,m,a[100000];
int f(int n){
	if(n&lt;10) return n;
	return f(n/10)+n%10;
}
int main(){
	cin&gt;&gt;n; 
	cout&lt;&lt;f(n);
}

</code></pre>
<p>3831:</p>
<pre><code class="language-cpp">#include&lt;iostream&gt;
typedef unsigned long long ull;
using namespace std;
int n,cnt,m;
string s;
bool f(int i){
	if(i==s.size()/2) return true;
	if(s[i]!=s[s.size()-1-i]) return false;
	return f(i+1); 
}
int main(){
	cin&gt;&gt;s; 
	if(f(0)==1) cout&lt;&lt;&quot;是回文串&quot;;
	else cout&lt;&lt;&quot;不是回文串&quot;; 
}

</code></pre>
<p>我的代码：<br>
f(i)表示s[i]~s[s.size()-1-i]是否是回文<br>
递推：</p>
<p><code>if(i==s.size()/2) return true;</code><br>
<code>if(s[i]!=s[s.size()-1-i]) return false;</code><br>
边界：</p>
<p><code>if(i==s.size()/2) return true;</code></p>
<pre><code>#include&lt;iostream&gt;
typedef unsigned long long ull;
using namespace std;
int n,cnt,m;
string s;
bool f(int i){
	if(i==s.size()/2) return true;
	if(s[i]!=s[s.size()-1-i]) return false;
	return f(i+1); 
}
int main(){
	cin&gt;&gt;s; 
	if(f(0)==1) cout&lt;&lt;&quot;是回文串&quot;;
	else cout&lt;&lt;&quot;不是回文串&quot;; 
}
</code></pre>
<p>老师的代码：</p>
<pre><code class="language-cpp">#include&lt;iostream&gt;
typedef unsigned long long ull;
using namespace std;
int n,cnt,m;
string s;
bool f(int i,int j){
	if(i&gt;=j) return true;
	if(s[i]==s[j]) return f(i+1,j-1);
	return false;
}
int main(){
	cin&gt;&gt;s; 
	if(f(0,s.size()-1)==1) cout&lt;&lt;&quot;是回文串&quot;;
	else cout&lt;&lt;&quot;不是回文串&quot;; 
}

</code></pre>
<p>其实也差不多。。。<br>
<img src="https://cdn.jsdelivr.net/gh/houpingze/tc@latest/data/20200905121906.png" alt="" loading="lazy"></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[金牌冲刺6]]></title>
        <id>https://houpingze.github.io/post/hpz-uke-ioi/</id>
        <link href="https://houpingze.github.io/post/hpz-uke-ioi/">
        </link>
        <updated>2020-09-03T11:00:47.000Z</updated>
        <content type="html"><![CDATA[<p><img src="https://houpingze.github.io/post-images/1599130901935.png" alt="" loading="lazy"><br>
<img src="https://houpingze.github.io/post-images/1599131404879.png" alt="" loading="lazy"></p>
<p>/fad</p>
<h2 id="1183">1183:</h2>
<p>题目：<br>
聪明的卡卡西帮助工人师傅们解决了难题，师傅们为了表示感谢，带领他们到了附近的西瓜地，请他们吃西瓜，正好看到农民伯伯正在给每个西瓜称重，每个西瓜的重量都记录在纸上，农民伯伯想知道这遍地的西瓜哪个重量的西瓜最多。卡卡西眼前一亮，大声的说：伯伯，让我来帮你完成吧！</p>
<p>代码：</p>
<p>桶：</p>
<pre><code class="language-cpp">#include&lt;iostream&gt;
typedef unsigned long long ull;
using namespace std;
int n,cnt,m,a[10001],t;
int main(){
    cin&gt;&gt;n;
    while(n--){
        cin&gt;&gt;t;
        a[t]++;	
    }
    for(int i=1;i&lt;=10000;i++){
        if(a[i]&gt;m){
            m=a[i];
            cnt=i;
        }
    }
    cout&lt;&lt;cnt;
}

</code></pre>
<p>暴力：</p>
<pre><code class="language-cpp">#include&lt;iostream&gt;
typedef unsigned long long ull;
using namespace std;
int n,cnt,m,a[10001];
int main(){
    cin&gt;&gt;n;
    for(int i=1;i&lt;=n;i++){
        cin&gt;&gt;a[i];
    }
    for(int i=1;i&lt;=10000;i++){
        int tmp=0;
        for(int j=1;j&lt;=n;j++){
            if(a[j]==i) tmp++;
        }
        if(m&lt;tmp){
            m=tmp;
            cnt=i;
        }
    }
    cout&lt;&lt;cnt;
}

</code></pre>
<h2 id="1350">1350</h2>
<p>题目：<br>
<img src="https://houpingze.github.io/post-images/1599134520033.png" alt="" loading="lazy"></p>
<pre><code class="language-cpp">#include&lt;iostream&gt;
typedef unsigned long long ull;
using namespace std;
int n,cnt,m,a[100]{1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,4,1,2,3,1,2,3,4};
int main(){
	string s;
	getline(cin,s)
	;
	for(int i=0;i&lt;s.size();i++){
		if(s[i]!=' ') cnt+=a[s[i]-'a'];
		else cnt++;  
	} 
	cout&lt;&lt;cnt;
}

</code></pre>
<p>1631：</p>
<figure data-type="image" tabindex="1"><img src="https://houpingze.github.io/post-images/1599136671819.png" alt="" loading="lazy"></figure>
<p>代码：</p>
<pre><code class="language-cpp">#include&lt;iostream&gt;
typedef unsigned long long ull;
using namespace std;
int n,cnt,m;
bool b[20000000];
int main(){
	cin&gt;&gt;n;
	for(int i=1;i&lt;=n;i++){
		double a;
		cin&gt;&gt;a&gt;&gt;m;
		for(int j=1;j&lt;=m;j++){
			b[(int)(a*j)]=!b[(int)(a*j)];
		}
	}
	for(int i=1;;i++){
		if(b[i]){
			cout&lt;&lt;i;
			return 0;
		}
	}
}

</code></pre>
<figure data-type="image" tabindex="2"><img src="https://houpingze.github.io/post-images/1599138922872.png" alt="" loading="lazy"></figure>
<p>😱😱😱😱😱😱😱😱😱😱😱😭😭😭😭😭😭😭😭😭😭😭😭😭😭😭😭😭😭😭😭😭😭😭😭😭😭😭😭😭😭😭😭😭😭😭😭😭😭😭😭😭😭😭😭😭😭😭😭😭😭😭😭😭😭😭😭😭😭😭😭😭😭😭😭😭😭😭😭😭😭😭😭😭😭😭😭😭😭😭😭😭😭😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥😥🤤🤤🤤🤤🤤🤤🤤🤤🤤🤤🤤😭😭🤐🤐🤐🤐😭😭😭😭😭😭😓😓😓😓😓😓😓😓😓😓😓😓😓😓😓😓😓😓😓😪😪😪😪😪😪😪😪😪😪😪😪😪😪😪😪😪😪😪😪😪😪😪😪😪😪😪😪😪😪😪😪😪😱😱😱😱😱😱😱😱😱😱😱😱😱😱😱😱😱😱😱😱😱😱😱😱😱😱😱😱😱😪😪😪😪😓😓😓😓😓😓😓😓😓😓😭😭😭😭😭🤤🤤🤤🤤🤤🤤🤤🤤🤤🤤🤤🤤🤤🤤🤤🤤🤤🤤🤤🤤🤤🤤🤤🤤🤤🤤🤤🤤🤤🤤🤤🤤🤤🤤🤤🤤🤤🤤🤤🤤🤤🤤🤤🤤🤤🤤🤤🤤</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[金牌冲刺6]]></title>
        <id>https://houpingze.github.io/post/jin-pai-chong-ci-6/</id>
        <link href="https://houpingze.github.io/post/jin-pai-chong-ci-6/">
        </link>
        <updated>2020-09-03T11:00:47.000Z</updated>
        <content type="html"><![CDATA[<p><img src="https://houpingze.github.io/post-images/1599130901935.png" alt="" loading="lazy"><br>
<img src="https://houpingze.github.io/post-images/1599131404879.png" alt="" loading="lazy"></p>
<p>/fad</p>
<h2 id="1183">1183:</h2>
<p>题目：<br>
聪明的卡卡西帮助工人师傅们解决了难题，师傅们为了表示感谢，带领他们到了附近的西瓜地，请他们吃西瓜，正好看到农民伯伯正在给每个西瓜称重，每个西瓜的重量都记录在纸上，农民伯伯想知道这遍地的西瓜哪个重量的西瓜最多。卡卡西眼前一亮，大声的说：伯伯，让我来帮你完成吧！</p>
<p>代码：</p>
<p>桶：</p>
<pre><code>#include&lt;iostream&gt;
typedef unsigned long long ull;
using namespace std;
int n,cnt,m,a[10001],t;
int main(){
    cin&gt;&gt;n;
    while(n--){
        cin&gt;&gt;t;
        a[t]++;	
    }
    for(int i=1;i&lt;=10000;i++){
        if(a[i]&gt;m){
            m=a[i];
            cnt=i;
        }
    }
    cout&lt;&lt;cnt;
}

</code></pre>
<p>暴力：</p>
<pre><code>#include&lt;iostream&gt;
typedef unsigned long long ull;
using namespace std;
int n,cnt,m,a[10001];
int main(){
    cin&gt;&gt;n;
    for(int i=1;i&lt;=n;i++){
        cin&gt;&gt;a[i];
    }
    for(int i=1;i&lt;=10000;i++){
        int tmp=0;
        for(int j=1;j&lt;=n;j++){
            if(a[j]==i) tmp++;
        }
        if(m&lt;tmp){
            m=tmp;
            cnt=i;
        }
    }
    cout&lt;&lt;cnt;
}

</code></pre>
<h2 id="1350">1350</h2>
<p>题目：<br>
<img src="https://houpingze.github.io/post-images/1599134520033.png" alt="" loading="lazy"></p>
<pre><code>#include&lt;iostream&gt;
typedef unsigned long long ull;
using namespace std;
int n,cnt,m,a[100]{1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,4,1,2,3,1,2,3,4};
int main(){
	string s;
	getline(cin,s)
	;
	for(int i=0;i&lt;s.size();i++){
		if(s[i]!=' ') cnt+=a[s[i]-'a'];
		else cnt++;  
	} 
	cout&lt;&lt;cnt;
}

</code></pre>
]]></content>
    </entry>
</feed>